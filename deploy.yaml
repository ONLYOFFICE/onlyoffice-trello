apiVersion: apps/v1
kind: Deployment
metadata:
  name: onlyoffice-trello-server
  labels:
    app: onlyoffice-trello-server
spec:
  replicas: 2
  selector:
    matchLabels:
      app: onlyoffice-trello-server
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: onlyoffice-trello-server
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - onlyoffice-trello-server
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - name: onlyoffice-trello-server
        image: onlyoffice/trello-server:1.0.1
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "100m"
        ports:
        - containerPort: 1111
          name: http-server
        env:
        - name: IS_DEVELOPMENT
          valueFrom:
            configMapKeyRef:
              name: onlyoffice-trello
              key: IS_DEVELOPMENT
        - name: IS_DEBUG
          valueFrom:
            configMapKeyRef:
              name: onlyoffice-trello
              key: IS_DEBUG
        - name: SERVER_HOST
          valueFrom:
            configMapKeyRef:
              name: onlyoffice-trello
              key: SERVER_HOST
        - name: SERVER_PORT
          valueFrom:
            configMapKeyRef:
              name: onlyoffice-trello
              key: SERVER_PORT
        - name: CLIENT_HOST
          valueFrom:
            configMapKeyRef:
              name: onlyoffice-trello
              key: CLIENT_HOST
        - name: POWERUP_NAME
          valueFrom:
            configMapKeyRef:
              name: onlyoffice-trello
              key: POWERUP_NAME
        - name: PROXY_ADDRESS
          valueFrom:
            configMapKeyRef:
              name: onlyoffice-trello
              key: PROXY_ADDRESS
        - name: POWERUP_ID
          valueFrom:
            secretKeyRef:
              name: onlyoffice-trello
              key: POWERUP_ID
        - name: POWERUP_APP_KEY
          valueFrom:
            secretKeyRef:
              name: onlyoffice-trello
              key: POWERUP_APP_KEY
        - name: POWERUP_APP_SECRET
          valueFrom:
            secretKeyRef:
              name: onlyoffice-trello
              key: POWERUP_APP_SECRET
        - name: POWERUP_APP_ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              name: onlyoffice-trello
              key: POWERUP_APP_ENCRYPTION_KEY
        - name: PROXY_ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              name: onlyoffice-trello
              key: PROXY_ENCRYPTION_KEY

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: onlyoffice-trello-client
  labels:
    app: onlyoffice-trello-client
spec:
  replicas: 2
  selector:
    matchLabels:
      app: onlyoffice-trello-client
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: onlyoffice-trello-client
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - onlyoffice-trello-client
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - name: onlyoffice-trello-client
        image: onlyoffice/trello-client:1.0.1
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "100m"
        ports:
        - containerPort: 80
          name: http-client
        env:
        - name: ENABLE_BUNDLE_ANALYZER
          valueFrom:
            configMapKeyRef:
              name: onlyoffice-trello
              key: ENABLE_BUNDLE_ANALYZER
        - name: BACKEND_HOST
          valueFrom:
            configMapKeyRef:
              name: onlyoffice-trello
              key: SERVER_HOST
        - name: POWERUP_NAME
          valueFrom:
            configMapKeyRef:
              name: onlyoffice-trello
              key: POWERUP_NAME
        - name: POWERUP_APP_KEY
          valueFrom:
            secretKeyRef:
              name: onlyoffice-trello
              key: POWERUP_APP_KEY
        volumeMounts:
        - name: nginx-conf
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: default.conf
      volumes:
      - name: nginx-conf
        configMap:
          name: nginx-conf

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: onlyoffice-trello-proxy
  labels:
    app: onlyoffice-trello-proxy
spec:
  replicas: 2
  selector:
    matchLabels:
      app: onlyoffice-trello-proxy
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: onlyoffice-trello-proxy
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - onlyoffice-trello-proxy
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - name: onlyoffice-trello-proxy
        image: onlyoffice/trello-proxy:1.0.1
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "100m"
        ports:
        - containerPort: 8080
          name: http-proxy
        env:
        - name: HOST
          valueFrom:
            configMapKeyRef:
              name: onlyoffice-trello
              key: PROXY_HOST
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: onlyoffice-trello
              key: PROXY_PORT
        - name: LIMIT
          valueFrom:
            configMapKeyRef:
              name: onlyoffice-trello
              key: PROXY_LIMIT
        - name: IP_LIMIT
          valueFrom:
            configMapKeyRef:
              name: onlyoffice-trello
              key: PROXY_IP_LIMIT
        - name: ENV
          valueFrom:
            configMapKeyRef:
              name: onlyoffice-trello
              key: PROXY_ENV
        - name: PROXY_SECRET
          valueFrom:
            secretKeyRef:
              name: onlyoffice-trello
              key: PROXY_ENCRYPTION_KEY
        - name: PROXY_KEY
          valueFrom:
            secretKeyRef:
              name: onlyoffice-trello
              key: PROXY_ENCRYPTION_KEY

---
apiVersion: v1
kind: Service
metadata:
  name: onlyoffice-trello-server
spec:
  ports:
  - port: 1111
    name: http-server
    targetPort: 1111
  selector:
    app: onlyoffice-trello-server
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: onlyoffice-trello-client
spec:
  ports:
  - port: 80
    name: http-client
    targetPort: 80
  selector:
    app: onlyoffice-trello-client
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: onlyoffice-trello-proxy
spec:
  ports:
  - port: 8080
    name: http-proxy
    targetPort: 8080
  selector:
    app: onlyoffice-trello-proxy
  type: ClusterIP

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: onlyoffice-trello
data:
  IS_DEVELOPMENT: "0"
  IS_DEBUG: "1"
  SERVER_HOST: ""
  SERVER_PORT: "1111"
  CLIENT_HOST: ""
  POWERUP_NAME: ""
  PROXY_ADDRESS: ""
  ENABLE_BUNDLE_ANALYZER: "0"
  PROXY_HOST: "0.0.0.0"
  PROXY_PORT: "8080"
  PROXY_LIMIT: "10"
  PROXY_IP_LIMIT: "1"
  PROXY_ENV: "1"

---
apiVersion: v1
kind: Secret
metadata:
  name: onlyoffice-trello
type: Opaque
stringData:
  POWERUP_ID: ""
  POWERUP_APP_KEY: ""
  POWERUP_APP_SECRET: ""
  POWERUP_APP_ENCRYPTION_KEY: ""
  PROXY_ENCRYPTION_KEY: ""

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
data:
  default.conf: |-
    server {
        listen 80;
        listen [::]:80;
        root   /usr/share/nginx/html;
        index  index.html index.htm;

        server_name localhost;

        location / {
                try_files $uri $uri/ /index.html;
        }
    }

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-onlyoffice-trello
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: 100m
spec:
  rules:
  - host: onlyoffice-trello-server.example.com
    http:
      paths:
      - pathType: Prefix
        path: /
        backend:
          service:
            name: onlyoffice-trello-server
            port:
              number: 1111
  - host: onlyoffice-trello-client.example.com
    http:
      paths:
      - pathType: Prefix
        path: /
        backend:
          service:
            name: onlyoffice-trello-client
            port:
              number: 80
  - host: onlyoffice-trello-proxy.example.com
    http:
      paths:
      - pathType: Prefix
        path: /
        backend:
          service:
            name: onlyoffice-trello-proxy
            port:
              number: 8080

# ---
# apiVersion: v1
# kind: Pod
# metadata:
#   name: nginx-frontend-proxy
#   labels:
#     app: nginx-frontend-proxy
# spec:
#   containers:
#   - name: nginx-frontend-proxy
#     image: nginx
#     resources:
#       requests:
#         memory: "256Mi"
#         cpu: "100m"
#       limits:
#         memory: "256Mi"
#         cpu: "100m"
#     ports:
#     - containerPort: 80
#       name: http
#     - containerPort: 443
#       name: https
#     volumeMounts:
#     - name: proxy-frontend
#       mountPath: /etc/nginx/conf.d/default.conf
#       subPath: default.conf
#     - name: server-tls
#       mountPath: "/etc/godaddy/server"
#       readOnly: true
#     - name: proxy-tls
#       mountPath: "/etc/godaddy/proxy"
#       readOnly: true
#     - name: client-tls
#       mountPath: "/etc/godaddy/client"
#       readOnly: true
#   volumes:
#   - name: proxy-frontend
#     configMap:
#       name: proxy-frontend
#   - name: server-tls
#     secret:
#       secretName: server-tls
#       items:
#       - key: server.crt
#         path: server.crt
#       - key: server.key
#         path: server.key
#   - name: proxy-tls
#     secret:
#       secretName: proxy-tls
#       items:
#       - key: proxy.crt
#         path: proxy.crt
#       - key: proxy.key
#         path: proxy.key
#   - name: client-tls
#     secret:
#       secretName: client-tls
#       items:
#       - key: client.crt
#         path: client.crt
#       - key: client.key
#         path: client.key

# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: nginx-frontend-proxy
# spec:
#   ports:
#   - port: 80
#     name: http
#     targetPort: 80
#   - port: 443
#     name: https
#     targetPort: 443
#   selector:
#     app: nginx-frontend-proxy
#   type: LoadBalancer

# ---
# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: proxy-frontend
# data:
#   default.conf: |-
#     # proxy_set_header Upgrade $http_upgrade;
#     # proxy_set_header X-Forwarded-Host $the_host;
#     proxy_set_header   Host             $host;
#     # proxy_set_header X-Forwarded-Proto $scheme;
#     # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#     # proxy_set_header X-REWRITER-URL $the_scheme://$the_host;
#     server {
#        listen 80;
#        listen [::]:80;
#        server_name onlyoffice-trello-server.example.com onlyoffice-trello-client.example.com onlyoffice-trello-proxy.example.com;
#        return 301 https://$host$request_uri;
#     }
#     server {
#       listen 0.0.0.0:443 ssl;
#       listen [::]:443 ssl;
#       server_name onlyoffice-trello-server.example.com;
#       server_tokens off;
#       client_max_body_size    4G;
#       ssl_certificate /etc/godaddy/server/server.crt;
#       ssl_certificate_key /etc/godaddy/server/server.key;
#       # ssl_verify_client off;
#     location / {
#       proxy_pass http://nginx-ingress-controller;
#     }
#     }
#     server {
#       listen 0.0.0.0:443 ssl;
#       listen [::]:443 ssl;
#       server_name onlyoffice-trello-client.example.com;
#       server_tokens off;
#       client_max_body_size    4G;
#       ssl_certificate /etc/godaddy/client/client.crt;
#       ssl_certificate_key /etc/godaddy/client/client.key;
#       # ssl_verify_client off;
#     location / {
#       proxy_pass http://nginx-ingress-controller;
#     }
#     }
#     server {
#       listen 0.0.0.0:443 ssl;
#       listen [::]:443 ssl;
#       server_name onlyoffice-trello-proxy.example.com;
#       server_tokens off;
#       client_max_body_size    4G;
#       ssl_certificate /etc/godaddy/proxy/proxy.crt;
#       ssl_certificate_key /etc/godaddy/proxy/proxy.key;
#       # ssl_verify_client off;
#     location / {
#       proxy_pass http://nginx-ingress-controller;
#     }
#     }
